diamante_automation:
    entities:
      ticket:
        class: 'Diamante\DeskBundle\Entity\Ticket'
        frontend_label: diamante.desk.ticket.entity_label
        conditions: ['created', 'updated', 'removed']
        properties:
          status:
            frontend_label: diamante.desk.ticket.status.label
            frontend_options:
              source: '^\\Diamante\\DeskBundle\\Model\\Ticket\\Status::getValueToLabelMap'
            type: status
            conditions: ['eq', 'neq', 'changed', 'changed_from', 'changed_to']
          priority:
            frontend_label: diamante.desk.ticket.priority.label
            frontend_options:
              source: '^\\Diamante\\DeskBundle\\Model\\Ticket\\Priority::getValueToLabelMap'
            type: priority
            conditions: ['eq', 'neq', 'changed', 'changed_from', 'changed_to', 'gt', 'gte', 'lt', 'lte']
          branch:
            frontend_label: diamante.desk.ticket.branch.label
            frontend_options:
              source: '@diamante.autocomplete.branch.service->getBranches'
            type: branch
            updatable: false
            conditions: ['eq', 'neq', 'like']
          assignee:
            frontend_label: diamante.desk.ticket.assignee.label
            frontend_options:
              source: '@diamante.autocomplete.user.service->getAssigners'
            type: user
            conditions: ['eq', 'neq', 'changed', 'changed_from', 'changed_to']
          reporter_email:
            frontend_label: diamante.desk.ticket.reporter_email.label
            type: virtual
            updatable: false
            conditions: ['eq', 'neq', 'like', 'not_like']
            accessor: diamante_automation.ticket.property.processor::getReporterEmail
          source:
            frontend_label: diamante.desk.ticket.source.label
            frontend_options:
              source: '^\\Diamante\\DeskBundle\\Model\\Ticket\\Source::getValueToLabelMap'
            type: source
            conditions: ['eq', 'neq']
          subject:
            frontend_label: diamante.desk.ticket.subject.label
            type: string
            updatable: false
            conditions: ['eq', 'neq', 'like', 'not_like']
          description:
            frontend_label: diamante.desk.ticket.description.label
            type: string
            updatable: false
            conditions: ['like', 'not_like']
          endpoint:
            frontend_label: diamante.desk.ticket.created_via_email.label
            type: virtual
            updatable: false
            conditions: ['eq', 'neq', 'like', 'not_like']
            accessor: diamante.ticket.email_processing_message_reference.repository::getEndpointByTicket
          created_at:
            frontend_label: diamante.desk.ticket.since_created.label
            type: datetime
            updatable: false
            conditions: ['gt', 'gte', 'lt', 'lte']
            rules: ['time_triggered']
          updated_at:
            frontend_label: diamante.desk.ticket.since_updated.label
            type: datetime
            updatable: false
            conditions: ['gt', 'gte', 'lt', 'lte']
            rules: ['time_triggered']
          status_updated_since:
            frontend_label: diamante.desk.ticket.since_status_updated.label
            type: datetime
            updatable: false
            conditions: ['gt', 'gte', 'lt', 'lte']
            rules: ['time_triggered']
          assigned_since:
            frontend_label: diamante.desk.ticket.since_assignee_updated.label
            type: datetime
            updatable: false
            conditions: ['gt', 'gte', 'lt', 'lte']
            rules: ['time_triggered']
      comment:
        class: 'Diamante\DeskBundle\Entity\Comment'
        frontend_label: diamante.desk.comment.entity_label
        conditions: ['created', 'updated', 'removed']
        properties:
          content:
            frontend_label: diamante.desk.comment.content.label
            type: string
            updatable: false
            conditions: ['like', 'not_like']
          private:
            frontend_label: diamante.desk.comment.private.label
            type: bool
            conditions: ['true', 'false']
          author:
            frontend_label: diamante.desk.comment.author.label
            frontend_options:
              source: '@diamante.autocomplete.user.service->getUsers'
            type: user
            updatable: false
            conditions: ['is_admin', 'is_customer']
          author_email:
            frontend_label: diamante.desk.comment.author_email.label
            type: virtual
            updatable: false
            conditions: ['eq', 'neq', 'like', 'not_like']
            accessor: diamante_automation.comment.property.processor::getAuthorEmail

    actions:
      move_to_branch:
        id: '@diamante.desk.automation.action.move_to_branch'
        frontend_label: diamante.desk.automation.action.move_to_branch
        frontend_options:
          source: '@diamante.autocomplete.branch.service->getBranches'
        data_types: ['virtual']
